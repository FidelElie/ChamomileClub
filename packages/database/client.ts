// Generated by Xata Codegen 0.23.2. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "users",
    columns: [
      { name: "deletedAt", type: "datetime" },
      { name: "forename", type: "string" },
      { name: "surname", type: "string" },
      { name: "nickname", type: "string" },
      { name: "active", type: "bool", defaultValue: "false" },
      { name: "position", type: "string" },
      { name: "description", type: "text" },
      { name: "roles", type: "multiple" },
      { name: "email", type: "email" },
      { name: "createdAt", type: "datetime" },
      { name: "public", type: "bool", notNull: true, defaultValue: "true" },
    ],
    revLinks: [
      { column: "user", table: "keys" },
      { column: "owner", table: "events" },
      { column: "user", table: "sessions" },
      { column: "createdBy", table: "polls" },
      { column: "user", table: "eventusers" },
    ],
  },
  {
    name: "keys",
    columns: [
      { name: "token", type: "text" },
      { name: "user", type: "link", link: { table: "users" }, unique: true },
      { name: "code", type: "string" },
    ],
  },
  {
    name: "events",
    columns: [
      { name: "name", type: "string" },
      { name: "owner", type: "link", link: { table: "users" } },
      { name: "date", type: "datetime" },
      { name: "status", type: "string" },
      { name: "startDate", type: "datetime" },
      { name: "endDate", type: "datetime" },
      { name: "description", type: "string" },
    ],
    revLinks: [
      { column: "event", table: "polls" },
      { column: "event", table: "eventusers" },
    ],
  },
  {
    name: "sessions",
    columns: [
      { name: "user", type: "link", link: { table: "users" } },
      { name: "deletedAt", type: "datetime" },
      { name: "createdAt", type: "datetime" },
    ],
  },
  {
    name: "polls",
    columns: [
      { name: "event", type: "link", link: { table: "events" } },
      { name: "createdBy", type: "link", link: { table: "users" } },
      { name: "expiresAt", type: "datetime" },
      { name: "multipleVotesPerUser", type: "bool", defaultValue: "false" },
      { name: "createdAt", type: "datetime" },
      { name: "name", type: "string" },
    ],
  },
  {
    name: "eventusers",
    columns: [
      { name: "event", type: "link", link: { table: "events" } },
      { name: "user", type: "link", link: { table: "users" } },
      { name: "status", type: "string" },
      { name: "createdAt", type: "datetime" },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type Users = InferredTypes["users"];
export type UsersRecord = Users & XataRecord;

export type Keys = InferredTypes["keys"];
export type KeysRecord = Keys & XataRecord;

export type Events = InferredTypes["events"];
export type EventsRecord = Events & XataRecord;

export type Sessions = InferredTypes["sessions"];
export type SessionsRecord = Sessions & XataRecord;

export type Polls = InferredTypes["polls"];
export type PollsRecord = Polls & XataRecord;

export type Eventusers = InferredTypes["eventusers"];
export type EventusersRecord = Eventusers & XataRecord;

export type DatabaseSchema = {
  users: UsersRecord;
  keys: KeysRecord;
  events: EventsRecord;
  sessions: SessionsRecord;
  polls: PollsRecord;
  eventusers: EventusersRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Fidel-Elie-s-workspace-tp1678.eu-west-1.xata.sh/db/chamomileclub",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
